Combat: Multi-hit windows + per-window cancel overrides + window damage_mult + begin/end events

Summary:
- Implemented Phase 1A.2 multi-hit strike support: processed_window_mask, dynamic active window mask evaluation, per-window damage_mult scalar, per-window status buildup scaffolds (bleed/frost placeholders accumulated on enemies).
- Added per-window cancel flag override logic + early cancel gating aware of multi-window completion.
- Extended AttackDef (light_3 & heavy_2) with multi-window definitions + explicit damage_mult (light_3 0.40x/0.90x; heavy_2 0.55x/0.85x/1.25x) and window-specific status buildup contributions.
- Phase 1A.5 partial: introduced per-window BEGIN/END animation event emission into a small ring buffer (events[]), unit test `test_combat_events` validates begin/end sequencing.
- Introduced RogueCombatEvent data (begin/end window) with emitted_events_mask tracking; ensures idempotent events even with repeated strike invocations in tests.
- Added combat events test and updated multi-hit test remains green after refactor.
- Gated debug printing (strike_entry/multi_hit_debug/strike_skip) behind COMBAT_DEBUG macro.
- Updated implementation plan: 1A.2 elaborated (damage_mult), 1A.5 now Partial, 1A.7 notes pending boundary & triple-window tests.
- README updated (multi-hit + events). Added enemy bleed_buildup/frost_buildup fields for upcoming status pipeline.

Follow-ups:
- Add heavy_2 triple-window ordering test (ensure mask sequence and 3 event pairs).
- Boundary tests: exact start_ms, end_ms-Îµ, end_ms transitions for multi-hit windows (ensure no double or missed hits).
- Implement status thresholds (e.g., bleed triggers DOT after N buildup, frost slow/freeze tiers) with decay over time + tests.
- FX/SFX dispatch layer consuming BEGIN/END events (1A.5 completion) + external authoring integration.
- Additional cancel edge case tests (whiff threshold, block threshold) with multi-window interplay.
- Consider compressing events ring buffer into externally consumable frame event queue for rendering layer.
