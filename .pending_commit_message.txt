Build: split overlay/content JSON into object libs; vendor cJSON stub; propagate JSON flag; all tests pass

- Add ROGUE_ENABLE_JSON_CONTENT flag and propagate to rogue_core and rogue_content_json
- Create object libraries:
	- rogue_debug_overlay (overlay_core/input/widgets/panels)
	- rogue_content_json (json_io, json_envelope)
- Vendor minimal cJSON under third_party/cjson and add static lib target rogue_thirdparty_cjson; link when JSON content is enabled
- Remove direct overlay/content sources from rogue_core and consume $<TARGET_OBJECTS:...> conditionally via generator expressions
- README: document new build flags and modules
- Roadmap: mark Phase 1.1/1.3/1.4 Done
- Validation: Debug build with SDL2 and full test suite (ctest -C Debug -j12) passed 100% (562/562)
docs(ci): build Doxygen with SDL=ON and -j12, upload Pages + docs-html artifacts, auto-deploy to GitHub Pages; update roadmap status and README docs section

tests: fix parallel flake in cfg migration simplified by isolating temp dirs; full suite green (561/561)

- Simplified migration unit now uses unique TEST_SOURCE_DIR/TEST_TARGET_DIR to avoid clashes with the full migration tests when running in parallel (-j12).
- Re-ran full Debug suite with SDL2: 561/561 passing.
- Roadmap checkpoint updated with flake note; added docs/DOXYGEN_GUIDE.md and linked it from README.

feat(debug overlay/skills): Phase 7.3 – JSON overrides Save/Load integration + auto-load

- Add file-based loader `rogue_skill_debug_load_overrides_file(const char* path)` delegating to existing text parser.
- App init now auto-loads overrides from env `ROGUE_SKILL_OVERRIDES` or falls back to `build/skills_overrides.json`.
- Skills panel gained "Save Overrides JSON" and new "Load Overrides JSON" actions targeting the same default path.
- Implementation uses json_io atomic writes; manual edits can be loaded live via the panel.
- Fixed MSVC warning-as-error (C4210) by removing a block-scoped extern and including the proper header in app_init.
- Built Debug with SDL2 and parallelism (-j12).
- Tests: ran full suite via `ctest -C Debug -j12 --output-on-failure` → 100% pass (561/561).

docs: README – document skills overrides workflow and env var

- Document Save/Load buttons in Skills panel, default path (`build/skills_overrides.json`), and `ROGUE_SKILL_OVERRIDES` usage with Windows examples.
- Bump CI verification note to 561/561.

roadmap: mark Phase 7.3 (Integrate with JSON save) as Done with implementation notes

feat(debug overlay/skills): Phase 7.4 – simulation UI + deterministic tests

- Extend Skills panel with simulation controls (duration/ticks/AP regen/priorities) and JSON result preview.
- Standardize fixed-tick semantics; align instant consumption and cooldown behavior; tests codify expectations.
- Add deterministic unit tests for rotation/simulation; all green under Debug SDL2 with -j12.

refactor(audio_vfx): finish splitting legacy effects.c into cohesive modules

- Move RNG seed setter and helpers into fx_rng.c; unify event bus in fx_bus.c; audio registry/mixer/music/env in fx_audio.c; VFX/particles/decals/shakes/post in fx_vfx.c.
- Remove src/audio_vfx/effects.c; keep public API stable in effects.h; rogue_core links against rogue_audio_vfx static lib.
- Full Debug build with SDL2 and parallel tests (-j12) pass 100%; resolves duplicate/overlap risk from monolith.

ci: re-run full Debug suite after monolith removal; bump README CI count

- Executed `ctest -C Debug -j12 --output-on-failure` → 100% pass (562/562).
- Updated README CI verification note from 561/561 to 562/562.

tests(ai/overlay): fix AI blackboard fuzz header + add caret edge tests; full suite green (564/564)

- test_ai_phase11_blackboard_fuzz: include <math.h> to ensure fabsf prototype; removes misleading mismatch print. Re-run single test: pass.
- Disable noisy tracing by default (ROGUE_TRACE_BB=0) in blackboard.c to keep CI/logs quiet; tracing can be enabled ad hoc for triage.
- Add explicit caret navigation/backspace/home/end coverage in `test_overlay_inputtext_caret`; verify sequencing and focus semantics.
- Full Debug build (SDL2) and ctest parallel run (-j12) now pass 100%: 564/564.
