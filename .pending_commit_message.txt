UI Phase 9.4: Inventory Virtualization Integration

Summary:
* Completed Phase 9.4 by integrating row-based list virtualization & wheel scrolling into inventory grid (`rogue_ui_inventory_grid`).
* Added unit test `test_ui_phase9_virtual_inventory` validating:
	- Visible subset < total slots (inventory of 200, visible subset constrained by viewport height)
	- Wheel scrolling advances first visible slot (row increments)
	- Node count remains bounded (no linear growth on scroll)
* Implemented persistent `s_scroll_row` and mapped rows -> slot index range via existing `rogue_ui_list_virtual_range` helper (treating rows as virtual items) eliminating prior ineffective per-frame start overrides.
* Removed temporary debug/trace prints from grid and test after verification.
* Updated roadmap (`implementation_plan_uisystem.txt`) marking 9.4 from Partial to Done with test reference.
* Updated README UI section: removed "Mostly Done" / remaining partial note; now documents completed inventory virtualization.

Technical Notes:
* Virtualization computes `total_rows = ceil(slots/columns)` and uses `item_pitch = cell_size + spacing` as row height. Wheel delta adjusts row index by ±1 clamped to [0, total_rows-1].
* `rogue_ui_list_virtual_range` invoked with total_rows to derive first/visible rows; mapped back to slot range. Ensures constant O(visible_rows * columns) node emission independent of total inventory size.
* Chosen approach avoids fractional pixel accumulation; potential future refinement: smooth pixel scroll offset + partial row culling.

Follow Ups (Deferred):
* Apply same row virtualization pattern to future log/history panel.
* Consider inertial scrolling + easing integration using Phase 8 timeline system.
* Hook rarity colors to real item definition metadata when available.

All Phase 9 items now complete (9.1–9.5). Proceeding next to Phase 10 testing & QA automation tasks unless reprioritized.
