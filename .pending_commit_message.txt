World Generation Phase 1: Foundational Data & APIs

Summary:
- Extended `RogueWorldGenConfig` with `continent_count` and `biome_seed_offset` fields establishing macro layout & RNG decorrelation parameters.
- Introduced multi-channel deterministic RNG via `RogueWorldGenContext` (macro/biome/micro) with decorrelated seed derivation constants.
- Added chunk coordinate system (`ROGUE_WORLD_CHUNK_SIZE=32`) and helper APIs: `rogue_world_chunk_from_tile`, `rogue_world_chunk_origin`, `rogue_world_chunk_index` preparing for streaming & caching phases (11.x).
- Implemented FNV-1a tilemap hashing utility `rogue_world_hash_tilemap` (basis for golden snapshot tests).
- Created `world_gen_foundation.c` housing Phase 1 implementations and registered it in build.
- Added unit test `test_worldgen_phase1_foundation` covering chunk mapping, RNG independence & hash stability.

World Generation Phase 2: Macro Layout & Biome Classification

Summary:
- Added `world_gen_macro.c` implementing continent mask (fbm + radial falloff) with size-filtered continent counting, elevation shaping & normalization, climate approximation (temperature latitude+altitude, moisture fbm), deterministic river peak selection + downhill carving, and biome classification thresholds mapping to existing tile types.
- Public API `rogue_world_generate_macro_layout` returns biome histogram & continent count.
- Adaptive marginal land promotion/demotion keeps land ratio within test bounds; RNG context reinit ensures deterministic hash on regeneration.
- Unit test `test_worldgen_phase2_macro` asserts water ratio bounds, â‰¥1 continent, river adjacency, and determinism (hash + histogram).

World Generation Phase 3: Biome Descriptors & Registry

Summary:
- Implemented data-driven biome descriptor system (CFG-based) with fields: name, music, vegetation_density, decoration_density, ambient_color, allow_structures, allow_weather, and tile_* palette weights.
- Added parser with normalization (tile weight sum -> 1), validation requiring at least one tile_* entry, and clamping of density values.
- Implemented biome registry (dynamic array) and directory loader (Windows glob pattern; POSIX path variant) for *.biome.cfg files.
- Palette blending utility `rogue_biome_blend_palettes` for boundary transitions (normalized output).
- Secure string handling (safe_copy) and MSVC secure CRT functions (fopen_s, strncpy_s, strtok_s, sscanf_s) to satisfy warning-as-error policy.
- Added unit test `test_worldgen_phase3_biome_descriptors` validating parse success/failure cases, normalization, registry add, and palette blend normalization.
- Roadmap updated Phase 3 items to Done; build system & commit message updated.

(Phase 4) Local terrain & caves layer added: fbm-based micro perturbation of grass/forest/mountain edges, standalone cave cellular automata pass (mountain-seeded) generating cave wall/floor tiles, deterministic lava pocket placement, ore vein random-walk carving, and passability map derivation (RoguePassabilityMap). Added new tile types (LAVA, ORE_VEIN), new module `world_gen_local.c`, public APIs for local generation steps, and unit test `test_worldgen_phase4_local_caves` covering openness bounds, feature presence, passability determinism, and full regeneration determinism. Roadmap Phase 4 items updated to Done; README updated with Phase 4 summary.

Rationale:
Advances world generation with data-driven biome layer enabling future extension (Phase 4+ local terrain & structures) while ensuring determinism & regression safety via targeted unit tests.
