feat(hit-detection): Slice C dual-path comparison, mismatch logging & overlay enhancements

Implements Pixel Mask Detection Slice C:
 - Always compute capsule + (toggled) pixel hit sets; pixel authoritative only if it yields hits.
 - Extended RogueHitDebugFrame with capsule/pixel arrays, mismatch counts, mask transform metadata.
 - Added cumulative mismatch counters + reset/accessors.
 - Updated rogue_combat_weapon_sweep_apply with dual evaluation, set difference stats, and extended debug store.
 - Added mismatch unit test (test_hit_mask_mismatch) validating capsule-only mismatch logging path.
 - Enhanced debug overlay: mask AABB placeholder grid, per-enemy hit coloring (green shared, yellow pixel-only, red capsule-only), summary line with counts & path used.
 - Roadmap & README changelog updated to reflect Slice C progress.

Next: performance counters & rotation-aware bounding (Slice D), pixel-normal refinement, actual bit visualization.

feat(enemy-difficulty): Phase 0 taxonomy & tier multipliers

Implements Roadmap Phase 0 (0.1-0.5):
 - Established archetype inventory (Melee, Ranged, Caster, EliteSupport, Boss)
 - Defined canonical budgets (hp, dps, control, mobility)
 - Added tier table (Normal→Nemesis) with monotonic HP & mostly monotonic DPS (intentional Nemesis DPS dip)
 - Reserved ID ranges for future Mythic/Event tiers
 - Added API (tier introspection, archetype names, base budget compute)
 - Added unit test `test_enemy_difficulty_phase0` (id uniqueness, monotonicity, archetype names, budget copy)

feat(enemy-difficulty): Phase 1 baseline scaling & relative ΔL model (partial)

Implements Roadmap Phase 1 core (1.1,1.2,1.5,1.7 partial):
 - Added sublinear base curves (HP L^1.15, DMG L^1.08, DEF L^1.05)
 - Implemented relative level differential scaling (downward penalties with caps, upward buffs with ramp offset & caps)
 - Dominance + trivial thresholds with reward scalar dampening function
 - Parameter file loader (global coefficients) + reset API
 - Final stat computation (base -> tier -> ΔL) and reward scalar API
 - Unit test `test_enemy_difficulty_phase1` verifying base monotonicity, relative multiplier grid invariants, reward thresholds, and stat positivity bounds
 - Roadmap updated marking completed / partial / deferred items (1.3 resist/crit derivation deferred, 1.4 biome-specific params deferred, 1.6 UI indicators deferred, TTK heatmap harness deferred)

Next: Phase 1 remaining items (attribute rating curves, biome param layering, UI ΔL indicator, full TTK simulation harness); proceed to Phase 2 modifiers after completing remaining Phase 1 deferred tasks.

feat(hit-detection): Pixel Masks Slice B runtime integration

- Added SHIFT+M toggle (input_events) to flip `g_hit_use_pixel_masks` for A/B testing
- Integrated pixel mask broadphase (AABB) + narrowphase sampling into `rogue_combat_weapon_sweep_apply` guarded by feature flag, with capsule fallback
- Implemented helper APIs in hit_pixel_mask.c/h: frame AABB query, enemy test sampling (center + 8-ring), local pixel → world transform
- Added math includes & pose usage (dx/dy/scale/angle) for transform; simplified rotation handling (no pre-rotation optimizations yet)
- New unit test `test_hit_mask_integration` verifying a pixel-mask registered hit; existing `test_hit_mask_basic` & Phase 7 integration tests still pass
- Roadmap `implementation_plan_detection.txt` updated with Slice B progress section
- README changelog updated (Pixel Detection Slice B entry)

Next: Slice C will log capsule vs pixel mismatches and surface debug overlay differentials.
