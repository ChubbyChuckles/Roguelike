World Generation Phases 1-5 Implementation Summary

Phase 1 (Foundation): Added WorldGenConfig, multi-channel deterministic RNG (macro/biome/micro), chunk coord utilities, FNV-1a hash for golden snapshots, and unit test validating RNG independence and mapping correctness.

Phase 2 (Macro Layout): Implemented continent mask (fbm + radial falloff + adaptive land ratio balancing), elevation normalization, climate approximation (temperature + moisture), river downhill tracing, biome classification, and unit test asserting land ratio bounds, river reaches water, biome histogram determinism (with context re-init fix).

Phase 3 (Biome Descriptors & Registry): Added CFG-based biome descriptor parser (tile_* weights, densities, ambient color, music, feature flags), registry loader (directory scan + validation + normalization), palette blending, secure CRT compliance, and unit test covering parse success/failure, normalization, blend output.

Phase 4 (Local Terrain & Caves): Introduced micro-scale fbm perturbation of grass/forest and mountain edge softening, cave cellular automata seeded under mountains, lava pocket placement, ore vein random-walk carving, passability map derivation, new tiles (LAVA, ORE_VEIN), and unit test verifying openness bounds, feature presence, passability determinism, full regeneration determinism.

Phase 5 (Rivers & Erosion Detailing): Added river refinement (noise-guided widening -> RIVER_WIDE, delta conversion with water adjacency), simplified thermal + hydraulic erosion passes reducing elevation proxies (mountain -> forest/grass), bridge hint gap scanner (placeholder BRIDGE_HINT enum), and unit test ensuring widened/delta presence, deterministic hash, and non-zero bridge hint count. README updated with Phase 4 & 5 summaries; roadmap advanced marking Phases 4-5 done.

Phase 6 (Structures & Points of Interest): Added structure descriptor registry (static baseline: hut, watchtower, shrine) with footprint, biome bitmask, rarity weight, elevation bounds, rotation flag; introduced placement solver (stochastic sampling + spacing, biome, elevation, and occupancy constraints) carving STRUCTURE_WALL/STRUCTURE_FLOOR tiles; added dungeon entrance placement marking DUNGEON_ENTRANCE tiles for a deterministic subset of structures; provided APIs for registry inspection and placement; unit test validates non-overlap, deterministic regeneration (placements & hash), and entrance placement. Roadmap updated (Phase 6 items marked Done/Partial per multi-piece & POI index deferrals); README extended with Phase 6 summary; new tiles STRUCTURE_WALL, STRUCTURE_FLOOR, DUNGEON_ENTRANCE, plus earlier BRIDGE_HINT enumerated.

Phase 7 (Dungeon Generator): Implemented graph-based dungeon layer with stochastic non-overlapping room sampling, nearest-neighbor MST plus loop edges (loop_percent target), corridor carving (L-shaped) producing DUNGEON_WALL/FLOOR. Added deterministic thematic tagging (largest=TREASURE, farthest two=ELITE, small leaf=PUZZLE) plus secret room generation (SECRET_DOOR), key/lock progression (LOCKED_DOOR + KEY tiles placed guaranteeing ordering), and trap placement (TRAP tiles). Extended public API (world_gen.h) with room/edge/graph structs and generation, carving, placement, and validation helpers. Added new dungeon tiles (DUNGEON_WALL/FLOOR/DOOR/LOCKED_DOOR/SECRET_DOOR/TRAP/KEY). Unit test `test_worldgen_phase7_dungeon` validates reachability == room_count, loop ratio >= threshold, carving >0, deterministic regeneration of room centers, secret/lock/trap counts non-negative, and tagging invariants (exactly one treasure, >=1 elite). Roadmap updated marking Phase 7.3 thematic tagging as Done; README updated with Phase 7 section.

