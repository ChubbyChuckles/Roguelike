combat: Phase 2 initial mitigation slice (damage types, armor/resists, min floor) + tests

Summary:
* Added RogueDamageType enum (physical, bleed, fire, frost, arcane, poison, true) and wired existing attack defs to use typed field.
* Extended player & enemy structs with armor + elemental resist fields, player penetration stats (pen_flat, pen_percent placeholder), and enemy status resist placeholders.
* Implemented rogue_apply_mitigation_enemy(): order = flat armor -> percent resist -> floor (>=1), computes overkill value.
* Integrated mitigation into strike loop (player damage numbers now reflect post-mitigation damage). Overkill captured but not yet consumed for executions.
* Added RogueDamageEvent struct (future logging/network emission) â€“ population deferred.
* Unit test test_combat_mitigation validates: armor reduces physical below baseline, 50% fire resist halves damage, extreme armor still allows >=1 damage.
* Updated implementation plan marking 2.1 Done; 2.2/2.3/2.6/2.7/2.8 Partial; 2.5 Done.
* README updated with mitigation pipeline progress summary.

Next Steps:
* Apply penetration stats in mitigation path (flat before armor clamp, then percent reducing remaining armor/resist).
* Crit layering refactor (pre vs post mitigation) and populate RogueDamageEvent emission buffer.
* Execution trigger logic using overkill thresholds and status buildup expansion.
