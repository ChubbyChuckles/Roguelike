Equipment Phase 16.1: External Item Definition JSON Tooling
- Added JSON import/export for equipment (item) base definitions: new APIs `rogue_item_defs_load_from_json` and `rogue_item_defs_export_json` alongside existing CSV loader.
- Parser: minimal hand-rolled forward-only scanner (whitespace skip, string & int number parsing) populating full `RogueItemDef` including implicit stats, set_id, socket_min/max with validation/clamps.
- Exporter: deterministic field ordering per object enabling clean diffs for editor pipelines; writes compact array form.
- Fast lookup integration: hash index rebuilt post JSON load; test exercises `rogue_item_def_index_fast` on loaded ids.
- Unit test `test_equipment_phase16_itemdefs_json` performs roundtrip: writes temp JSON (2 records), loads, asserts count & fast index presence, exports to buffer, checks for id tokens and representative numeric fields (level_req=5, base_armor=5), ensuring schema coverage.
- Roadmap updated marking 16.1 Done; README augmented with concise feature summary.


Equipment Phase 16.2: Set Builder & Live Preview Tooling
- Added `equipment_content.c/h` module providing external registries for set and runeword definitions (decoupled from aggregation code) with registration, lookup, count, and reset APIs.
- Implemented JSON import/export for set definitions (`rogue_sets_load_from_json`, `rogue_sets_export_json`) using minimal hand-rolled parser matching style of item defs; deterministic export ordering.
- Added validation ensuring strictly increasing piece thresholds per set; invalid sets skipped upon load.
- Implemented live preview interpolation helper `rogue_set_preview_apply` computing bonus stats at an arbitrary equipped count including partial linear progress toward next threshold (int truncation for stability/determinism).
- Refactored `equipment_stats.c` to remove embedded static set/runeword registries, now sourcing data via `equipment_content` APIs; set aggregation rewritten to call preview helper per distinct set id.
- Added unit test `test_equipment_phase16_set_builder` covering JSON load (1 set added), registry find, interpolation at 3 pieces between 2â†’4 thresholds (expecting truncated halfway stat values), and export JSON token presence.
- Updated build system (CMake) to compile new module; roadmap marks 16.2 Done; README bullet added; commit message appended.

