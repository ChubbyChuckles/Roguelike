feat(combat): Phase 1 core expansion – attack registry, branching queue, scaling coeffs

Highlights:
* WeaponArchetype enum (light, heavy, thrust, ranged, spell_focus) + static chains (3/2/2/2/1) in new module `combat_attacks.c/h`.
* AttackDef expanded: timing, stamina_cost, base_damage, damage_type, STR/DEX/INT scaling coefficients, active windows.
* Combat loop now sources windup/active/recovery + stamina cost from AttackDef (replaces prior hard-coded combo scalar for these paths).
* Branch queue system (1.6 partial): queue alternate archetype to consume on next attack start (resets chain index).
* Chain index progression with wrap; archetype switch resets index.
* Scaling integration: damage formula applies base + attribute * coeffs prior to combo & crit multipliers.

New Tests:
* `test_combat_attack_registry` – chain lengths, bounds clamp, window coverage.
* `test_combat_chain_branch` – chain advancement & archetype branch consumption.
* `test_combat_scaling_coeffs` – verifies archetype scaling emphasis (STR for light/heavy, DEX for thrust/ranged, INT for spell_focus).

Plan Updates:
* 1.1 Done, 1.2/1.3 partial (struct + registry; cancel_tags & external loader pending), 1.4 partial (linear chains & branch queue), 1.5 partial (damage_type + scaling coeffs added), 1.6 partial (queued branch implemented), 1.7 Done.

README:
* Combat section updated including scaling coeffs & new tests.

Next Steps:
* Directional branch variants, cancel tag metadata, external data file loader (hot-reload), status buildup arrays, per-window multi-hit support (Phase 1A integration).
