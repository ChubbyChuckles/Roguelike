feat(hit-system): complete Phase 4 feedback (particles, refined knockback, SFX stub, overkill explosion flag)

Implements full Phase 4 of hit system roadmap:
 - Added hit_feedback module (particles, knockback magnitude, SFX stub, explosion tracking)
 - Refined knockback scaling: level + strength differential with clamp (0.18 -> 0.55)
 - Particle bursts (normal 10-14 rand, overkill 24, capped) with directional spread off impact normal
 - Overkill/execution triggers larger burst & explosion frame flag
 - Integrated feedback into combat_strike (first-hit SFX stub, per-enemy flash, knockback apply)
 - Added enemy level field for future balancing (currently default 0 if not set)
 - Added tests: test_hit_phase4_feedback (magnitude growth & cap, particle count ranges) + existing knockback_basic retained
 - Roadmap updated: Phases 1-4 marked Done, status summary advanced
 - Build system: added hit_feedback.c

Future work: Phase 5 slash VFX overlay, Phase 6 debug textual overlay & explosion visualization, performance profiling & tuning.

feat(hit-system): tunable enemy pursuit offset (Shift+1..4 + JSON persistence)

Added pursue_offset_x/pursue_offset_y to hitbox tuning JSON; load/save extended.
Shift + (1/2) adjusts X, (3/4) adjusts Y, 9 resets, 0 saves (mirrors existing CTRL/ALT schemes).
Enemy aggro movement now targets player position plus pursue offsets, allowing centering or forward lead tweaks to align attack capsule visually.

feat(debug): render enemy pursuit target (red circle)

Draws a small red circle at player position + pursue_offset (when hit debug enabled) so designers can visually align AI approach point with weapon capsule center.

feat(hit-system): implement Phase 5 weapon frame overlay & pose tool MVP

Replaced slash VFX spritesheet dependency with per-weapon 8-frame pose system:
 - Added weapon_pose module (weapon_pose.c/h) loading ../assets/weapons/<id>_pose.json + 8 frame images (<id>_f0..f7) with per-frame {dx,dy,angle,scale,pivot_x,pivot_y}.
 - Integrated overlay render into player_render (attack frames derive deterministic frame index from attack timer).
 - Fallback defaults when pose JSON absent; missing frame image warns and reuses nearest prior.
 - Added unit test test_weapon_pose_loader (validates JSON parse & frame value mapping, directory create path) â€“ green.
 - Added MVP SDL2 authoring tool weapon_pose_tool (keyboard editing: translate, rotate, scale, pivot adjust, frame select, save JSON).
 - Roadmap updated: Phase 5 marked Done, Phase 5A Partial (MVP). Procedural trail effect deferred.
 - README changelog updated with Phase 5 entry.

Future: Phase 6 debug textual overlay, Phase 7 legacy reach removal & perf profiling, PNG loader integration (currently BMP), advanced tool features (copy/paste, mouse drag, batch export), optional procedural trail.

feat(hit-system): Phase 6 debug overlay core (capsule+hits+normals+text) + toggle & test

Implemented hit debug overlay (toggle key F) drawing weapon sweep capsule (cyan), impact points & normals (yellow) and textual metrics (frame id, hit count, player pos & tuning values). Added `hit_debug_overlay.c` module and integrated render call post scene draw. Added unit test `test_hit_phase6_debug_toggle` verifying toggle API. Roadmap updated (Phase 6 Partial-Done: remaining enemy AABB & ring buffer playback deferred). README changelog entry added.


chore(tool): rework weapon_pose_tool for single weapon image over player sheet frames

Refactored pose tool to overlay one weapon image across 8 frames sliced from a player slash animation sheet (PNG via WIC or BMP). Added direction & frame_size metadata in JSON; auto output naming weapon_<id>_<direction>_pose.json; HUD updates title with current frame transforms. Roadmap + README changelog updated.

