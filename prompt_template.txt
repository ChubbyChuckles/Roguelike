### Skillsystem

Read the implementation_plan_skillsystem.txt, go to the next features in line that need implementation and implement as many of them as possible. Use unit tests and modularize the code as much as possible to prevent regression. Never build without SDL2. After a successful implementation update the implementation_plan_skillsystem.txt, generate a descriptive commit message and update the README.md. Iterate this process as often as you can in one request.


### Combatsystem

Read the implementation_plan_combatsystem.txt, go to the next features in line that need implementation and implement as many of them as possible and don't just partially implement the features. Use unit tests and modularize the code as much as possible to prevent regression. Execute the unit tests and build the project to verify there are no errors. Never build without SDL2. After a successful implementation update the implementation_plan_combatsystem.txt, generate a descriptive commit message and update the README.md. Iterate this process as often as you can in one request.


### Maintainability

Read the implementation_plan_maintainability.txt, go to the next features in line that need implementation and implement as many of them as possible and don't just partially implement the features. Use unit tests and modularize the code as much as possible to prevent regression. Execute the unit tests and build the project to verify there are no errors. Never build without SDL2. After a successful implementation update the implementation_plan_maintainability.txt, generate a descriptive commit message and update the README.md. Iterate this process as often as you can in one request.


### UI / UX Design

Read the "roadmaps\implementation_plan_uisystem.txt", go to the next features in line that need implementation and implement as many of them as possible and don't just partially implement the features. Use unit tests and modularize the code as much as possible to prevent regression. Execute the unit tests and build the project to verify there are no errors. Never build without SDL2. After a successful implementation update the "roadmaps\implementation_plan_uisystem.txt", generate a descriptive commit message that you append to ".pending_commit_message.txt" and update the README.md. Iterate this process as often as you can in one request.

### Persistence

Read the "roadmaps\implementation_plan_persistence_migration.txt", go to the next features in line that need implementation and implement as many of them as possible and don't just partially implement the features. Use unit tests and modularize the code as much as possible to prevent regression. Execute the unit tests and build the project to verify there are no errors. Never build without SDL2. After a successful implementation update the "roadmaps\implementation_plan_persistence_migration.txt", generate a descriptive commit message that you append to ".pending_commit_message.txt" and update the README.md. Iterate this process as often as you can in one request.


### Itemsystem

Read the "roadmaps\implementation_plan_itemsystem.txt", go to the next features in line that need implementation and implement as many of them as possible and don't just partially implement the features. Use unit tests and modularize the code as much as possible to prevent regression. Execute the unit tests and build the project to verify there are no errors. Never build without SDL2. After a successful implementation update the "roadmaps\implementation_plan_itemsystem.txt", generate a descriptive commit message that you append to ".pending_commit_message.txt" and update the README.md. Iterate this process as often as you can in one request.


### Dialoguesystem

Read the "roadmaps\implementation_plan_dialoguesystem.txt", go to the next features in line that need implementation and implement as many of them as possible and don't just partially implement the features. Use unit tests and modularize the code as much as possible to prevent regression. Execute the unit tests and build the project to verify there are no errors. Never build without SDL2. After a successful implementation update the "roadmaps\implementation_plan_dialoguesystem.txt", generate a descriptive commit message that you append to ".pending_commit_message.txt" and update the README.md. Iterate this process as often as you can in one request.


### Enemy-AI-System

Read the "roadmaps\implementation_plan_aisystem.txt", go to the next features in line that need implementation and implement as many of them as possible and don't just partially implement the features. Use unit tests and modularize the code as much as possible to prevent regression. Execute the unit tests and build the project to verify there are no errors. Never build without SDL2. After a successful implementation update the "roadmaps\implementation_plan_aisystem.txt", generate a descriptive commit message that you append to ".pending_commit_message.txt" and update the README.md. Iterate this process as often as you can in one request.