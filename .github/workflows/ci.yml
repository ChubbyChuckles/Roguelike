name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

# Required for GitHub Pages deployment
permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: true

jobs:
  build-test-windows:
    name: Build & Test (windows-latest)
    runs-on: windows-latest
    env:
      BUILD_TYPE: Debug
      ROGUE_ENABLE_SDL: ON
      VCPKG_ROOT: C:\vcpkg
      VCPKG_DEFAULT_TRIPLET: x64-windows
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Install clang-format (Windows)
        shell: pwsh
        run: |
          choco install -y llvm || echo "llvm already installed"
          if (Get-Command clang-format -ErrorAction SilentlyContinue) { clang-format --version }

      - name: Install SDL via vcpkg (x64-windows)
        shell: pwsh
        run: |
          $vcpkgExe = Join-Path $env:VCPKG_ROOT 'vcpkg.exe'
          if (-Not (Test-Path $vcpkgExe)) {
            Write-Host "vcpkg not found at $env:VCPKG_ROOT; attempting default path C:\\vcpkg"
            $env:VCPKG_ROOT = 'C:\\vcpkg'
            $vcpkgExe = 'C:\\vcpkg\\vcpkg.exe'
          }
          & $vcpkgExe version
          & $vcpkgExe install sdl2 sdl2-image sdl2-mixer --triplet $env:VCPKG_DEFAULT_TRIPLET

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1

      - name: Configure (Windows, SDL ON)
        run: >-
          cmake -S . -B build -DROGUE_ENABLE_SDL=${{ env.ROGUE_ENABLE_SDL }} -DCMAKE_BUILD_TYPE=${{ env.BUILD_TYPE }} -DCMAKE_TOOLCHAIN_FILE=${{ env.VCPKG_ROOT }}\scripts\buildsystems\vcpkg.cmake

      - name: Build (Windows, -j12)
        run: cmake --build build --config ${{ env.BUILD_TYPE }} --parallel 12

      - name: Format Check
        run: |
          set -e
          cmake --build build --target format-check || (
            echo "Format check failed. Run: cmake --build build --target format";
            exit 1
          )

      - name: Run Tests (-j12)
        run: ctest --test-dir build -C ${{ env.BUILD_TYPE }} -j12 --output-on-failure

  docs:
    name: Build Docs (windows-latest)
    runs-on: windows-latest
    needs: build-test-windows
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup CMake
        uses: jwlawson/actions-setup-cmake@v1

      - name: Install Doxygen and Graphviz
        shell: pwsh
        run: |
          choco install -y doxygen.portable graphviz || echo "doxygen/graphviz already installed"
          doxygen -v

      - name: Configure (SDL OFF for docs)
        run: >-
          cmake -S . -B build -DROGUE_ENABLE_SDL=OFF -DCMAKE_BUILD_TYPE=Debug

      - name: Generate Doxygen docs
        run: cmake --build build --target docs --config Debug

      - name: Upload Pages artifact (docs html)
        uses: actions/upload-pages-artifact@v3
        with:
          path: build/docs/html

      - name: Upload HTML docs artifact (debug convenience)
        uses: actions/upload-artifact@v4
        with:
          name: docs-html
          path: build/docs/html

      - name: clang-tidy Summary (best-effort)
        if: always()
        run: |
          echo "If clang-tidy is configured it ran during the build (via target property)."

  deploy-pages:
    name: Deploy Docs to GitHub Pages
    needs: docs
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - name: Configure Pages
        uses: actions/configure-pages@v4
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
