world_gen.c (~348) Likely mixes configuration interpretation, noise/feature placement, biome rules, structure placement. Suggested split:
world_gen_core.c (entry orchestration & loops)
world_gen_noise.c (noise / height / mask generation)
world_gen_features.c (structures, rooms, special features)
world_gen_biomes.c (biome-specific decoration passes) Add an internal header world_gen_internal.h for shared static helpers.


skills.c (~234) Concerns: skill registry, activation, ticking, cooldown handling, persistence bridging. Suggested split:
skills_registry.c (definition table & registration)
skills_runtime.c (activation, cooldown, update tick)
skills_effects.c (common effect application helpers)


tile_sprites.c (~202) If it mixes loading, atlas bookkeeping, and render helpers:
tile_sprites_load.c (file/texture loading & atlas build)
tile_sprites_lookup.c (ID â†’ UV / caching queries)
tile_sprites_render.c (batch submission or helper draw calls) Cross-file shared structs in tile_sprites_internal.h.


persistence.c (~184) Likely multiple save domains (player stats, world gen params, inventory). Suggested split:
persistence_player.c
persistence_world.c
persistence_inventory.c
persistence_io.c (low-level file read/write, path handling) Facade keeps old function names or re-exports.


projectiles.c (~168) Split into:
projectiles_update.c (movement, lifetime, collision)
projectiles_spawn.c (creation APIs & pooling)
projectiles_render.c (draw logic) Shared pool structures in projectiles_internal.h.