# Skills-related unit tests

# Phase 1A haste snapshot & drift correction test
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_skills_phase1a_haste_snapshot_and_drift.c AND NOT TARGET test_skills_phase1a_haste_snapshot_and_drift)
    add_executable(test_skills_phase1a_haste_snapshot_and_drift unit/test_skills_phase1a_haste_snapshot_and_drift.c)
    target_link_libraries(test_skills_phase1a_haste_snapshot_and_drift PRIVATE rogue_core)
    target_compile_definitions(test_skills_phase1a_haste_snapshot_and_drift PRIVATE SDL_MAIN_HANDLED=1)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_skills_phase1a_haste_snapshot_and_drift PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_skills_phase1a_haste_snapshot_and_drift COMMAND test_skills_phase1a_haste_snapshot_and_drift)
endif()

# Skills Phase 2 costs & refunds test
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_skills_phase2_costs_refunds.c AND NOT TARGET test_skills_phase2_costs_refunds)
    add_executable(test_skills_phase2_costs_refunds unit/test_skills_phase2_costs_refunds.c)
    target_link_libraries(test_skills_phase2_costs_refunds PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_skills_phase2_costs_refunds PRIVATE ROGUE_HAVE_SDL=1 SDL_MAIN_HANDLED=1)
    else()
        target_compile_definitions(test_skills_phase2_costs_refunds PRIVATE SDL_MAIN_HANDLED=1)
    endif()
    add_test(NAME test_skills_phase2_costs_refunds COMMAND test_skills_phase2_costs_refunds)
endif()

# Skills Phase 2.4/2.5 Overdrive + Heat test
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_skills_phase2_overdrive_heat.c AND NOT TARGET test_skills_phase2_overdrive_heat)
    add_executable(test_skills_phase2_overdrive_heat unit/test_skills_phase2_overdrive_heat.c)
    target_link_libraries(test_skills_phase2_overdrive_heat PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_skills_phase2_overdrive_heat PRIVATE ROGUE_HAVE_SDL=1 SDL_MAIN_HANDLED=1)
    else()
        target_compile_definitions(test_skills_phase2_overdrive_heat PRIVATE SDL_MAIN_HANDLED=1)
    endif()
    add_test(NAME test_skills_phase2_overdrive_heat COMMAND test_skills_phase2_overdrive_heat)
endif()

# Explicitly add skill cast/channel test (Phase 1.3/1.4 partial)
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_skill_cast_and_channel.c AND NOT TARGET test_skill_cast_and_channel)
    add_executable(test_skill_cast_and_channel unit/test_skill_cast_and_channel.c)
    target_link_libraries(test_skill_cast_and_channel PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_skill_cast_and_channel PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_skill_cast_and_channel COMMAND test_skill_cast_and_channel)
endif()

# Explicitly add Phase 1A buffer + weave + combo test
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_skills_phase1a_buffer_weave_combo.c AND NOT TARGET test_skills_phase1a_buffer_weave_combo)
    add_executable(test_skills_phase1a_buffer_weave_combo unit/test_skills_phase1a_buffer_weave_combo.c)
    target_link_libraries(test_skills_phase1a_buffer_weave_combo PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_skills_phase1a_buffer_weave_combo PRIVATE ROGUE_HAVE_SDL=1 SDL_MAIN_HANDLED=1)
    else()
        target_compile_definitions(test_skills_phase1a_buffer_weave_combo PRIVATE SDL_MAIN_HANDLED=1)
    endif()
    add_test(NAME test_skills_phase1a_buffer_weave_combo COMMAND test_skills_phase1a_buffer_weave_combo)
endif()

# Explicitly add passive skills test
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_skills_passive.c AND NOT TARGET test_skills_passive)
    add_executable(test_skills_passive unit/test_skills_passive.c)
    target_link_libraries(test_skills_passive PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_skills_passive PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_skills_passive COMMAND test_skills_passive)
endif()

# Explicitly add fireball skill test
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_fireball_skill.c AND NOT TARGET test_fireball_skill)
    add_executable(test_fireball_skill unit/test_fireball_skill.c)
    target_link_libraries(test_fireball_skill PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_fireball_skill PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_fireball_skill COMMAND test_fireball_skill)
endif()

# Explicitly add fireball skill test
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_skill_fireball.c AND NOT TARGET test_skill_fireball)
    add_executable(test_skill_fireball unit/test_skill_fireball.c)
    target_link_libraries(test_skill_fireball PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_skill_fireball PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_skill_fireball COMMAND test_skill_fireball)
endif()

# Skills Phase 7.1 event bus integration test
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_skills_phase7_event_bus.c AND NOT TARGET test_skills_phase7_event_bus)
    add_executable(test_skills_phase7_event_bus unit/test_skills_phase7_event_bus.c)
    target_link_libraries(test_skills_phase7_event_bus PRIVATE rogue_core)
    # Always define SDL main handling; enable SDL definition when available
    target_compile_definitions(test_skills_phase7_event_bus PRIVATE SDL_MAIN_HANDLED=1)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_skills_phase7_event_bus PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_skills_phase7_event_bus COMMAND test_skills_phase7_event_bus)
endif()

# Skills Phase 10.4 auto-doc generator test
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_skills_phase10_4_api_doc.c AND NOT TARGET test_skills_phase10_4_api_doc)
    add_executable(test_skills_phase10_4_api_doc unit/test_skills_phase10_4_api_doc.c)
    target_link_libraries(test_skills_phase10_4_api_doc PRIVATE rogue_core)
    target_compile_definitions(test_skills_phase10_4_api_doc PRIVATE SDL_MAIN_HANDLED=1)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_skills_phase10_4_api_doc PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_skills_phase10_4_api_doc COMMAND test_skills_phase10_4_api_doc)
endif()

# Skills Phase 10.5 parser edge cases and invalid reference rejection
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_skills_phase10_5_parser_edges.c AND NOT TARGET test_skills_phase10_5_parser_edges)
    add_executable(test_skills_phase10_5_parser_edges unit/test_skills_phase10_5_parser_edges.c)
    target_link_libraries(test_skills_phase10_5_parser_edges PRIVATE rogue_core)
    target_compile_definitions(test_skills_phase10_5_parser_edges PRIVATE SDL_MAIN_HANDLED=1)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_skills_phase10_5_parser_edges PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_skills_phase10_5_parser_edges COMMAND test_skills_phase10_5_parser_edges)
endif()
