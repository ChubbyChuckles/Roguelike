# Inventory System Tests

# Inventory Phase 1 unique entries test (1.1-1.5)
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_inventory_phase1_unique_entries.c AND NOT TARGET test_inventory_phase1_unique_entries)
    add_executable(test_inventory_phase1_unique_entries unit/test_inventory_phase1_unique_entries.c)
    target_link_libraries(test_inventory_phase1_unique_entries PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_inventory_phase1_unique_entries PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_inventory_phase1_unique_entries COMMAND test_inventory_phase1_unique_entries)
endif()

# Inventory Phase 1 extended (labels, delta, cap handler) tests (1.3,1.6,1.7)
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_inventory_phase1_labels_delta.c AND NOT TARGET test_inventory_phase1_labels_delta)
    add_executable(test_inventory_phase1_labels_delta unit/test_inventory_phase1_labels_delta.c)
    target_link_libraries(test_inventory_phase1_labels_delta PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_inventory_phase1_labels_delta PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_inventory_phase1_labels_delta COMMAND test_inventory_phase1_labels_delta)
endif()

# Inventory Phase 1 persistence integration test (1.6) – verifies save/load of entry model
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_inventory_phase1_persistence.c AND NOT TARGET test_inventory_phase1_persistence)
    add_executable(test_inventory_phase1_persistence unit/test_inventory_phase1_persistence.c)
    target_link_libraries(test_inventory_phase1_persistence PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_inventory_phase1_persistence PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_inventory_phase1_persistence COMMAND test_inventory_phase1_persistence)
endif()

# Inventory Phase 3 tags & flags test (3.1/3.2 partial scope) – favorites/locks + tag persistence
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_inventory_phase3_tags.c AND NOT TARGET test_inventory_phase3_tags)
    add_executable(test_inventory_phase3_tags unit/test_inventory_phase3_tags.c)
    target_link_libraries(test_inventory_phase3_tags PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_inventory_phase3_tags PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_inventory_phase3_tags COMMAND test_inventory_phase3_tags)
endif()

# Inventory Phase 3 auto-tag rules test (3.3/3.4 persistence + application)
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_inventory_phase3_rules.c AND NOT TARGET test_inventory_phase3_rules)
    add_executable(test_inventory_phase3_rules unit/test_inventory_phase3_rules.c)
    target_link_libraries(test_inventory_phase3_rules PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_inventory_phase3_rules PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_inventory_phase3_rules COMMAND test_inventory_phase3_rules)
endif()

# Inventory Phase 3 rule enforcement & determinism test (3.6)
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_inventory_phase3_lock_rule_enforce.c AND NOT TARGET test_inventory_phase3_lock_rule_enforce)
    add_executable(test_inventory_phase3_lock_rule_enforce unit/test_inventory_phase3_lock_rule_enforce.c)
    target_link_libraries(test_inventory_phase3_lock_rule_enforce PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_inventory_phase3_lock_rule_enforce PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_inventory_phase3_lock_rule_enforce COMMAND test_inventory_phase3_lock_rule_enforce)
endif()

# Inventory Phase 4 query & sorting initial test (4.1-4.3 partial)
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_inventory_phase4_query_sort.c AND NOT TARGET test_inventory_phase4_query_sort)
    add_executable(test_inventory_phase4_query_sort unit/test_inventory_phase4_query_sort.c)
    target_link_libraries(test_inventory_phase4_query_sort PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_inventory_phase4_query_sort PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_inventory_phase4_query_sort COMMAND test_inventory_phase4_query_sort)
endif()

# Inventory Phase 4 saved searches test (4.4 partial)
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_inventory_phase4_saved_searches.c AND NOT TARGET test_inventory_phase4_saved_searches)
    add_executable(test_inventory_phase4_saved_searches unit/test_inventory_phase4_saved_searches.c)
    target_link_libraries(test_inventory_phase4_saved_searches PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_inventory_phase4_saved_searches PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_inventory_phase4_saved_searches COMMAND test_inventory_phase4_saved_searches)
endif()

# Inventory Phase 4 saved searches persistence test (4.4 persistence)
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_inventory_phase4_saved_searches_persist.c AND NOT TARGET test_inventory_phase4_saved_searches_persist)
    add_executable(test_inventory_phase4_saved_searches_persist unit/test_inventory_phase4_saved_searches_persist.c)
    target_link_libraries(test_inventory_phase4_saved_searches_persist PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_inventory_phase4_saved_searches_persist PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_inventory_phase4_saved_searches_persist COMMAND test_inventory_phase4_saved_searches_persist)
endif()

# Inventory Phase 4 query result cache test (4.6)
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_inventory_phase4_query_cache.c AND NOT TARGET test_inventory_phase4_query_cache)
    add_executable(test_inventory_phase4_query_cache unit/test_inventory_phase4_query_cache.c)
    target_link_libraries(test_inventory_phase4_query_cache PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_inventory_phase4_query_cache PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_inventory_phase4_query_cache COMMAND test_inventory_phase4_query_cache)
endif()

# Inventory Phase 4 quick actions test (4.4 UI binding)
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_inventory_phase4_quick_actions.c AND NOT TARGET test_inventory_phase4_quick_actions)
    add_executable(test_inventory_phase4_quick_actions unit/test_inventory_phase4_quick_actions.c)
    target_link_libraries(test_inventory_phase4_quick_actions PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_inventory_phase4_quick_actions PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_inventory_phase4_quick_actions COMMAND test_inventory_phase4_quick_actions)
endif()

# Explicitly add inventory persistence test (loot phase 4)
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_loot_phase4_inventory_persistence.c AND NOT TARGET test_loot_phase4_inventory_persistence)
    add_executable(test_loot_phase4_inventory_persistence unit/test_loot_phase4_inventory_persistence.c)
    target_link_libraries(test_loot_phase4_inventory_persistence PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_loot_phase4_inventory_persistence PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_loot_phase4_inventory_persistence COMMAND test_loot_phase4_inventory_persistence)

    # Phase 13 inventory UI management test
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_inventory_ui_phase13.c AND NOT TARGET test_inventory_ui_phase13)
        add_executable(test_inventory_ui_phase13 unit/test_inventory_ui_phase13.c)
        target_link_libraries(test_inventory_ui_phase13 PRIVATE rogue_core)
        if(ROGUE_ENABLE_SDL)
            target_compile_definitions(test_inventory_ui_phase13 PRIVATE ROGUE_HAVE_SDL=1)
        endif()
        add_test(NAME test_inventory_ui_phase13 COMMAND test_inventory_ui_phase13)
    endif()
endif()
