# Progression Test Suite

# Integration Plumbing Phase 3.6.1 XP/LevelUp event publishing test
if(EXISTS ${CMAKE_CURRENT_LIST_DIR}/unit/test_progression_phase3_6_xp_events.c AND NOT TARGET test_progression_phase3_6_xp_events)
    add_executable(test_progression_phase3_6_xp_events unit/test_progression_phase3_6_xp_events.c)
    target_link_libraries(test_progression_phase3_6_xp_events PRIVATE rogue_core)
    if(TARGET SDL2::SDL2)
        target_link_libraries(test_progression_phase3_6_xp_events PRIVATE SDL2::SDL2)
        target_compile_definitions(test_progression_phase3_6_xp_events PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_progression_phase3_6_xp_events COMMAND test_progression_phase3_6_xp_events)
endif()

# Integration Plumbing Phase 3.6.2 Skill prerequisite gating + SKILL_UNLOCKED event test
if(EXISTS ${CMAKE_CURRENT_LIST_DIR}/unit/test_progression_phase3_6_skill_unlock.c AND NOT TARGET test_progression_phase3_6_skill_unlock)
    add_executable(test_progression_phase3_6_skill_unlock unit/test_progression_phase3_6_skill_unlock.c)
    target_link_libraries(test_progression_phase3_6_skill_unlock PRIVATE rogue_core)
    if(TARGET SDL2::SDL2)
        target_link_libraries(test_progression_phase3_6_skill_unlock PRIVATE SDL2::SDL2)
        target_compile_definitions(test_progression_phase3_6_skill_unlock PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_progression_phase3_6_skill_unlock COMMAND test_progression_phase3_6_skill_unlock)
endif()

# Phase 3.6.3 test: progression maze unlock gating
if(EXISTS ${CMAKE_CURRENT_LIST_DIR}/unit/test_progression_phase3_6_maze_unlocks.c AND NOT TARGET test_progression_phase3_6_maze_unlocks)
    add_executable(test_progression_phase3_6_maze_unlocks unit/test_progression_phase3_6_maze_unlocks.c)
    target_link_libraries(test_progression_phase3_6_maze_unlocks PRIVATE rogue_core)
    if(TARGET SDL2::SDL2)
        target_link_libraries(test_progression_phase3_6_maze_unlocks PRIVATE SDL2::SDL2)
        target_compile_definitions(test_progression_phase3_6_maze_unlocks PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_progression_phase3_6_maze_unlocks COMMAND test_progression_phase3_6_maze_unlocks)
endif()

# Integration Plumbing Phase 3.6.4 Effect Scaling test
if(EXISTS ${CMAKE_CURRENT_LIST_DIR}/unit/test_progression_phase3_6_effect_scaling.c AND NOT TARGET test_progression_phase3_6_effect_scaling)
    add_executable(test_progression_phase3_6_effect_scaling unit/test_progression_phase3_6_effect_scaling.c)
    target_link_libraries(test_progression_phase3_6_effect_scaling PRIVATE rogue_core)
    if(TARGET SDL2::SDL2)
        target_link_libraries(test_progression_phase3_6_effect_scaling PRIVATE SDL2::SDL2)
        target_compile_definitions(test_progression_phase3_6_effect_scaling PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_progression_phase3_6_effect_scaling COMMAND test_progression_phase3_6_effect_scaling)
endif()
# Phase 3.6.5: Mastery integration test
if(EXISTS ${CMAKE_CURRENT_LIST_DIR}/unit/test_progression_phase3_6_mastery_integration.c AND NOT TARGET test_progression_phase3_6_mastery_integration)
    add_executable(test_progression_phase3_6_mastery_integration unit/test_progression_phase3_6_mastery_integration.c)
    target_link_libraries(test_progression_phase3_6_mastery_integration PRIVATE rogue_core)
    if(TARGET SDL2::SDL2)
        target_link_libraries(test_progression_phase3_6_mastery_integration PRIVATE SDL2::SDL2)
        target_compile_definitions(test_progression_phase3_6_mastery_integration PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_progression_phase3_6_mastery_integration COMMAND test_progression_phase3_6_mastery_integration)
endif()
# Phase 3.6.6: Skill specialization paths test
if(EXISTS ${CMAKE_CURRENT_LIST_DIR}/unit/test_progression_phase3_6_specialization.c AND NOT TARGET test_progression_phase3_6_specialization)
    add_executable(test_progression_phase3_6_specialization unit/test_progression_phase3_6_specialization.c)
    target_link_libraries(test_progression_phase3_6_specialization PRIVATE rogue_core)
    if(TARGET SDL2::SDL2)
        target_link_libraries(test_progression_phase3_6_specialization PRIVATE SDL2::SDL2)
        target_compile_definitions(test_progression_phase3_6_specialization PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_progression_phase3_6_specialization COMMAND test_progression_phase3_6_specialization)
endif()
# Progression Phase 6.2-6.5 mastery extended test
if(EXISTS ${CMAKE_CURRENT_LIST_DIR}/unit/test_progression_phase6_mastery_extended.c)
    add_executable(test_progression_phase6_mastery_extended unit/test_progression_phase6_mastery_extended.c)
    target_link_libraries(test_progression_phase6_mastery_extended PRIVATE rogue_core)
    add_test(NAME test_progression_phase6_mastery_extended COMMAND test_progression_phase6_mastery_extended)
endif()

# Character Progression Phase 0 taxonomy test
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_progression_phase0_taxonomy.c AND NOT TARGET test_progression_phase0_taxonomy)
    add_executable(test_progression_phase0_taxonomy unit/test_progression_phase0_taxonomy.c)
    target_link_libraries(test_progression_phase0_taxonomy PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_progression_phase0_taxonomy PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_progression_phase0_taxonomy COMMAND test_progression_phase0_taxonomy)
endif()

# Character Progression Phase 1 XP curve test
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_progression_phase1_xp_curve.c AND NOT TARGET test_progression_phase1_xp_curve)
    add_executable(test_progression_phase1_xp_curve unit/test_progression_phase1_xp_curve.c)
    target_link_libraries(test_progression_phase1_xp_curve PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_progression_phase1_xp_curve PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_progression_phase1_xp_curve COMMAND test_progression_phase1_xp_curve)
endif()

# Character Progression Phase 2 attribute allocation test
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_progression_phase2_attributes.c AND NOT TARGET test_progression_phase2_attributes)
    add_executable(test_progression_phase2_attributes unit/test_progression_phase2_attributes.c)
    target_link_libraries(test_progression_phase2_attributes PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_progression_phase2_attributes PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_progression_phase2_attributes COMMAND test_progression_phase2_attributes)
endif()

# Character Progression Phase 3 ratings test
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_progression_phase3_ratings.c AND NOT TARGET test_progression_phase3_ratings)
    add_executable(test_progression_phase3_ratings unit/test_progression_phase3_ratings.c)
    target_link_libraries(test_progression_phase3_ratings PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_progression_phase3_ratings PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_progression_phase3_ratings COMMAND test_progression_phase3_ratings)
endif()

if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_progression_phase4_maze.c AND NOT TARGET test_progression_phase4_maze)
    add_executable(test_progression_phase4_maze unit/test_progression_phase4_maze.c)
    target_link_libraries(test_progression_phase4_maze PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_progression_phase4_maze PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_progression_phase4_maze COMMAND test_progression_phase4_maze)
endif()

# Character Progression Phase 5 passive unlock integration test
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_progression_phase5_passives.c AND NOT TARGET test_progression_phase5_passives)
    add_executable(test_progression_phase5_passives unit/test_progression_phase5_passives.c)
    target_link_libraries(test_progression_phase5_passives PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_progression_phase5_passives PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_progression_phase5_passives COMMAND test_progression_phase5_passives)
endif()

if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_progression_mastery.c AND NOT TARGET test_progression_mastery)
    add_executable(test_progression_mastery unit/test_progression_mastery.c)
    target_link_libraries(test_progression_mastery PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_progression_mastery PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_progression_mastery COMMAND test_progression_mastery)
endif()

# Character Progression Phase 7 ring expansion & keystone heuristic scaffold test
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_progression_phase7_rings.c AND NOT TARGET test_progression_phase7_rings)
    add_executable(test_progression_phase7_rings unit/test_progression_phase7_rings.c)
    target_link_libraries(test_progression_phase7_rings PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_progression_phase7_rings PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_progression_phase7_rings COMMAND test_progression_phase7_rings)
endif()
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_progression_phase7_visualization.c AND NOT TARGET test_progression_phase7_visualization)
    add_executable(test_progression_phase7_visualization unit/test_progression_phase7_visualization.c)
    target_link_libraries(test_progression_phase7_visualization PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_progression_phase7_visualization PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_progression_phase7_visualization COMMAND test_progression_phase7_visualization)
endif()
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_progression_phase8_perpetual.c AND NOT TARGET test_progression_phase8_perpetual)
    add_executable(test_progression_phase8_perpetual unit/test_progression_phase8_perpetual.c)
    target_link_libraries(test_progression_phase8_perpetual PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_progression_phase8_perpetual PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_progression_phase8_perpetual COMMAND test_progression_phase8_perpetual)
endif()

# Character Progression Phase 9 synergy test
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_progression_phase9_synergy.c AND NOT TARGET test_progression_phase9_synergy)
    add_executable(test_progression_phase9_synergy unit/test_progression_phase9_synergy.c)
    target_link_libraries(test_progression_phase9_synergy PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_progression_phase9_synergy PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_progression_phase9_synergy COMMAND test_progression_phase9_synergy)
endif()

# Character Progression Phase 10 buffs/debuff integration test
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_progression_phase10_buffs.c AND NOT TARGET test_progression_phase10_buffs)
    add_executable(test_progression_phase10_buffs unit/test_progression_phase10_buffs.c)
    target_link_libraries(test_progression_phase10_buffs PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_progression_phase10_buffs PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_progression_phase10_buffs COMMAND test_progression_phase10_buffs)
endif()

# Character Progression Phase 11 cache/dirty flags performance scaffolding test
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_progression_phase11_cache.c AND NOT TARGET test_progression_phase11_cache)
    add_executable(test_progression_phase11_cache unit/test_progression_phase11_cache.c)
    target_link_libraries(test_progression_phase11_cache PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_progression_phase11_cache PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_progression_phase11_cache COMMAND test_progression_phase11_cache)
endif()

# Character Progression Phase 11 benchmark (non-failing performance signal)
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_progression_phase11_bench.c AND NOT TARGET test_progression_phase11_bench)
    add_executable(test_progression_phase11_bench unit/test_progression_phase11_bench.c)
    target_link_libraries(test_progression_phase11_bench PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_progression_phase11_bench PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_progression_phase11_bench COMMAND test_progression_phase11_bench)
endif()

# Character Progression Phase 11 re-spec stale cache test
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_progression_phase11_respec.c AND NOT TARGET test_progression_phase11_respec)
    add_executable(test_progression_phase11_respec unit/test_progression_phase11_respec.c)
    target_link_libraries(test_progression_phase11_respec PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_progression_phase11_respec PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_progression_phase11_respec COMMAND test_progression_phase11_respec)
endif()

# Character Progression Phase 12 persistence & migration test
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_progression_phase12_persistence.c AND NOT TARGET test_progression_phase12_persistence)
    add_executable(test_progression_phase12_persistence unit/test_progression_phase12_persistence.c)
    target_link_libraries(test_progression_phase12_persistence PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_progression_phase12_persistence PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_progression_phase12_persistence COMMAND test_progression_phase12_persistence)
endif()

# Character Progression Phase 12 V3 extended persistence test
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_progression_phase12_v3.c AND NOT TARGET test_progression_phase12_v3)
    add_executable(test_progression_phase12_v3 unit/test_progression_phase12_v3.c)
    target_link_libraries(test_progression_phase12_v3 PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_progression_phase12_v3 PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_progression_phase12_v3 COMMAND test_progression_phase12_v3)
endif()

# Character Progression Phase 7.3 anti-stack safeguards test
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_progression_phase7_antistack.c AND NOT TARGET test_progression_phase7_antistack)
    add_executable(test_progression_phase7_antistack unit/test_progression_phase7_antistack.c)
    target_link_libraries(test_progression_phase7_antistack PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_progression_phase7_antistack PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_progression_phase7_antistack COMMAND test_progression_phase7_antistack)
endif()
