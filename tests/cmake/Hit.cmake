# Hit Test Suite

# Loot filter predicate evaluation test (Itemsystem 12.7)
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_hit_geometry.c AND NOT TARGET test_hit_geometry)
    add_executable(test_hit_geometry unit/test_hit_geometry.c)
    target_link_libraries(test_hit_geometry PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_hit_geometry PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_hit_geometry COMMAND test_hit_geometry)
endif()
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_hit_sweep_normals.c AND NOT TARGET test_hit_sweep_normals)
    add_executable(test_hit_sweep_normals unit/test_hit_sweep_normals.c)
    target_link_libraries(test_hit_sweep_normals PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_hit_sweep_normals PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_hit_sweep_normals COMMAND test_hit_sweep_normals)
endif()

if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_hit_phase4_feedback.c AND NOT TARGET test_hit_phase4_feedback)
    add_executable(test_hit_phase4_feedback unit/test_hit_phase4_feedback.c)
    target_link_libraries(test_hit_phase4_feedback PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_hit_phase4_feedback PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_hit_phase4_feedback COMMAND test_hit_phase4_feedback)
endif()
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_hit_phase6_debug_toggle.c AND NOT TARGET test_hit_phase6_debug_toggle)
    add_executable(test_hit_phase6_debug_toggle unit/test_hit_phase6_debug_toggle.c)
    target_link_libraries(test_hit_phase6_debug_toggle PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_hit_phase6_debug_toggle PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_hit_phase6_debug_toggle COMMAND test_hit_phase6_debug_toggle)
endif()
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_hit_mask_basic.c AND NOT TARGET test_hit_mask_basic)
    add_executable(test_hit_mask_basic unit/test_hit_mask_basic.c)
    target_link_libraries(test_hit_mask_basic PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_hit_mask_basic PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_hit_mask_basic COMMAND test_hit_mask_basic)
endif()
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_hit_mask_mismatch.c AND NOT TARGET test_hit_mask_mismatch)
    add_executable(test_hit_mask_mismatch unit/test_hit_mask_mismatch.c)
    target_link_libraries(test_hit_mask_mismatch PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_hit_mask_mismatch PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_hit_mask_mismatch COMMAND test_hit_mask_mismatch)
endif()
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_hit_phase7_integration.c AND NOT TARGET test_hit_phase7_integration)
    add_executable(test_hit_phase7_integration unit/test_hit_phase7_integration.c)
    target_link_libraries(test_hit_phase7_integration PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_hit_phase7_integration PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_hit_phase7_integration COMMAND test_hit_phase7_integration)
endif()
# Phase M3.6: directory-based hitbox loading test
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_hitbox_directory_load.c AND NOT TARGET test_hitbox_directory_load)
    add_executable(test_hitbox_directory_load unit/test_hitbox_directory_load.c)
    target_link_libraries(test_hitbox_directory_load PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_hitbox_directory_load PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_hitbox_directory_load COMMAND test_hitbox_directory_load)
endif()
# Loot mask integration test
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_hit_mask_integration.c AND NOT TARGET test_hit_mask_integration)
    add_executable(test_hit_mask_integration unit/test_hit_mask_integration.c)
    target_link_libraries(test_hit_mask_integration PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_hit_mask_integration PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_hit_mask_integration COMMAND test_hit_mask_integration)
endif()
