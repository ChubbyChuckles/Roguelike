if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_enemy_difficulty_phase0.c AND NOT TARGET test_enemy_difficulty_phase0)
    add_executable(test_enemy_difficulty_phase0 unit/test_enemy_difficulty_phase0.c)
    target_link_libraries(test_enemy_difficulty_phase0 PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_enemy_difficulty_phase0 PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_enemy_difficulty_phase0 COMMAND test_enemy_difficulty_phase0)
endif()
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_enemy_difficulty_phase1.c AND NOT TARGET test_enemy_difficulty_phase1)
    add_executable(test_enemy_difficulty_phase1 unit/test_enemy_difficulty_phase1.c)
    target_link_libraries(test_enemy_difficulty_phase1 PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_enemy_difficulty_phase1 PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_enemy_difficulty_phase1 COMMAND test_enemy_difficulty_phase1)
endif()
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_enemy_difficulty_phase1_ext.c AND NOT TARGET test_enemy_difficulty_phase1_ext)
    add_executable(test_enemy_difficulty_phase1_ext unit/test_enemy_difficulty_phase1_ext.c)
    target_link_libraries(test_enemy_difficulty_phase1_ext PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_enemy_difficulty_phase1_ext PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_enemy_difficulty_phase1_ext COMMAND test_enemy_difficulty_phase1_ext)
endif()
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_enemy_difficulty_phase2.c AND NOT TARGET test_enemy_difficulty_phase2)
    add_executable(test_enemy_difficulty_phase2 unit/test_enemy_difficulty_phase2.c)
    target_link_libraries(test_enemy_difficulty_phase2 PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_enemy_difficulty_phase2 PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_enemy_difficulty_phase2 COMMAND test_enemy_difficulty_phase2)
endif()
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_enemy_difficulty_phase3.c AND NOT TARGET test_enemy_difficulty_phase3)
    add_executable(test_enemy_difficulty_phase3 unit/test_enemy_difficulty_phase3.c)
    target_link_libraries(test_enemy_difficulty_phase3 PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_enemy_difficulty_phase3 PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_enemy_difficulty_phase3 COMMAND test_enemy_difficulty_phase3)
endif()
# Phase 4 adaptive difficulty test
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_enemy_difficulty_phase4.c AND NOT TARGET test_enemy_difficulty_phase4)
    add_executable(test_enemy_difficulty_phase4 unit/test_enemy_difficulty_phase4.c)
    target_link_libraries(test_enemy_difficulty_phase4 PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_enemy_difficulty_phase4 PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_enemy_difficulty_phase4 COMMAND test_enemy_difficulty_phase4)
endif()
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_enemy_difficulty_phase5.c AND NOT TARGET test_enemy_difficulty_phase5)
    add_executable(test_enemy_difficulty_phase5 unit/test_enemy_difficulty_phase5.c)
    target_link_libraries(test_enemy_difficulty_phase5 PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_enemy_difficulty_phase5 PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_enemy_difficulty_phase5 COMMAND test_enemy_difficulty_phase5)
endif()
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_enemy_json_loader.c AND NOT TARGET test_enemy_json_loader)
    add_executable(test_enemy_json_loader unit/test_enemy_json_loader.c)
    target_link_libraries(test_enemy_json_loader PRIVATE rogue_core)
    if(TARGET SDL2::SDL2)
        target_compile_definitions(test_enemy_json_loader PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_enemy_json_loader COMMAND test_enemy_json_loader)
endif()

if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_enemy_integration_phase0.c AND NOT TARGET test_enemy_integration_phase0)
    add_executable(test_enemy_integration_phase0 unit/test_enemy_integration_phase0.c)
    target_link_libraries(test_enemy_integration_phase0 PRIVATE rogue_core)
    if(TARGET SDL2::SDL2)
        target_compile_definitions(test_enemy_integration_phase0 PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_enemy_integration_phase0 COMMAND test_enemy_integration_phase0)
endif()
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_enemy_integration_phase1.c AND NOT TARGET test_enemy_integration_phase1)
    add_executable(test_enemy_integration_phase1 unit/test_enemy_integration_phase1.c)
    target_link_libraries(test_enemy_integration_phase1 PRIVATE rogue_core)
    if(TARGET SDL2::SDL2)
        target_compile_definitions(test_enemy_integration_phase1 PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_enemy_integration_phase1 COMMAND test_enemy_integration_phase1)
endif()
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_enemy_integration_phase2.c AND NOT TARGET test_enemy_integration_phase2)
    add_executable(test_enemy_integration_phase2 unit/test_enemy_integration_phase2.c)
    target_link_libraries(test_enemy_integration_phase2 PRIVATE rogue_core)
    if(TARGET SDL2::SDL2)
        target_compile_definitions(test_enemy_integration_phase2 PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_enemy_integration_phase2 COMMAND test_enemy_integration_phase2)
endif()
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_enemy_integration_phase3.c AND NOT TARGET test_enemy_integration_phase3)
    add_executable(test_enemy_integration_phase3 unit/test_enemy_integration_phase3.c)
    target_link_libraries(test_enemy_integration_phase3 PRIVATE rogue_core)
    if(TARGET SDL2::SDL2)
        target_compile_definitions(test_enemy_integration_phase3 PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_enemy_integration_phase3 COMMAND test_enemy_integration_phase3)
endif()
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_enemy_integration_phase5.c AND NOT TARGET test_enemy_integration_phase5)
    add_executable(test_enemy_integration_phase5 unit/test_enemy_integration_phase5.c)
    target_link_libraries(test_enemy_integration_phase5 PRIVATE rogue_core)
    if(TARGET SDL2::SDL2)
        target_compile_definitions(test_enemy_integration_phase5 PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_enemy_integration_phase5 COMMAND test_enemy_integration_phase5)
endif()
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_enemy_integration_phase6.c AND NOT TARGET test_enemy_integration_phase6)
    add_executable(test_enemy_integration_phase6 unit/test_enemy_integration_phase6.c)
    target_link_libraries(test_enemy_integration_phase6 PRIVATE rogue_core)
    if(TARGET SDL2::SDL2)
        target_compile_definitions(test_enemy_integration_phase6 PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_enemy_integration_phase6 COMMAND test_enemy_integration_phase6)
endif()
