# SaveSystem Theme Tests
# Comprehensive save system testing including versioning, migration, compression,
# integrity checks, autosave functionality, and format evolution

if(ROGUE_ENABLE_TESTS)
    # Phase 1 SaveManager roundtrip binary test (explicit add to avoid glob cache issues)
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_save_roundtrip.c AND NOT TARGET test_save_roundtrip)
        add_executable(test_save_roundtrip unit/test_save_roundtrip.c)
        target_link_libraries(test_save_roundtrip PRIVATE rogue_core)
        if(ROGUE_ENABLE_SDL)
            target_compile_definitions(test_save_roundtrip PRIVATE ROGUE_HAVE_SDL=1)
        endif()
        add_test(NAME test_save_roundtrip COMMAND test_save_roundtrip)
    endif()

    # Autosave ring test
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_save_autosave_ring.c AND NOT TARGET test_save_autosave_ring)
        add_executable(test_save_autosave_ring unit/test_save_autosave_ring.c)
        target_link_libraries(test_save_autosave_ring PRIVATE rogue_core)
        if(ROGUE_ENABLE_SDL)
            target_compile_definitions(test_save_autosave_ring PRIVATE ROGUE_HAVE_SDL=1)
        endif()
        add_test(NAME test_save_autosave_ring COMMAND test_save_autosave_ring)
    endif()

    # Component ordering determinism test
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_save_ordering_determinism.c AND NOT TARGET test_save_ordering_determinism)
        add_executable(test_save_ordering_determinism unit/test_save_ordering_determinism.c)
        target_link_libraries(test_save_ordering_determinism PRIVATE rogue_core)
        if(ROGUE_ENABLE_SDL)
            target_compile_definitions(test_save_ordering_determinism PRIVATE ROGUE_HAVE_SDL=1)
        endif()
        add_test(NAME test_save_ordering_determinism COMMAND test_save_ordering_determinism)
    endif()

    # Migration chain test
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_save_migration_chain.c AND NOT TARGET test_save_migration_chain)
        add_executable(test_save_migration_chain unit/test_save_migration_chain.c)
        target_link_libraries(test_save_migration_chain PRIVATE rogue_core)
        if(ROGUE_ENABLE_SDL)
            target_compile_definitions(test_save_migration_chain PRIVATE ROGUE_HAVE_SDL=1)
        endif()
        add_test(NAME test_save_migration_chain COMMAND test_save_migration_chain)
    endif()

    # Migration metrics test
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_save_migration_metrics.c AND NOT TARGET test_save_migration_metrics)
        add_executable(test_save_migration_metrics unit/test_save_migration_metrics.c)
        target_link_libraries(test_save_migration_metrics PRIVATE rogue_core)
        if(ROGUE_ENABLE_SDL)
            target_compile_definitions(test_save_migration_metrics PRIVATE ROGUE_HAVE_SDL=1)
        endif()
        add_test(NAME test_save_migration_metrics COMMAND test_save_migration_metrics)
    endif()

    # JSON export test
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_save_json_export.c AND NOT TARGET test_save_json_export)
        add_executable(test_save_json_export unit/test_save_json_export.c)
        target_link_libraries(test_save_json_export PRIVATE rogue_core)
        if(ROGUE_ENABLE_SDL)
            target_compile_definitions(test_save_json_export PRIVATE ROGUE_HAVE_SDL=1)
        endif()
        add_test(NAME test_save_json_export COMMAND test_save_json_export)
    endif()

    # Component reload test
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_save_component_reload.c AND NOT TARGET test_save_component_reload)
        add_executable(test_save_component_reload unit/test_save_component_reload.c)
        target_link_libraries(test_save_component_reload PRIVATE rogue_core)
        if(ROGUE_ENABLE_SDL)
            target_compile_definitions(test_save_component_reload PRIVATE ROGUE_HAVE_SDL=1)
        endif()
        add_test(NAME test_save_component_reload COMMAND test_save_component_reload)
    endif()

    # TLV header layout test (v3+)
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_save_v3_tlv_headers.c AND NOT TARGET test_save_v3_tlv_headers)
        add_executable(test_save_v3_tlv_headers unit/test_save_v3_tlv_headers.c)
        target_link_libraries(test_save_v3_tlv_headers PRIVATE rogue_core)
        if(ROGUE_ENABLE_SDL)
            target_compile_definitions(test_save_v3_tlv_headers PRIVATE ROGUE_HAVE_SDL=1)
        endif()
        add_test(NAME test_save_v3_tlv_headers COMMAND test_save_v3_tlv_headers)
    endif()

    # Backward compatibility: load fabricated v2 under v3 build
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_save_v2_backward_load.c AND NOT TARGET test_save_v2_backward_load)
        add_executable(test_save_v2_backward_load unit/test_save_v2_backward_load.c)
        target_link_libraries(test_save_v2_backward_load PRIVATE rogue_core)
        if(ROGUE_ENABLE_SDL)
            target_compile_definitions(test_save_v2_backward_load PRIVATE ROGUE_HAVE_SDL=1)
        endif()
        add_test(NAME test_save_v2_backward_load COMMAND test_save_v2_backward_load)
    endif()

    # Debug JSON toggle test
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_save_debug_json_toggle.c AND NOT TARGET test_save_debug_json_toggle)
        add_executable(test_save_debug_json_toggle unit/test_save_debug_json_toggle.c)
        target_link_libraries(test_save_debug_json_toggle PRIVATE rogue_core)
        if(ROGUE_ENABLE_SDL)
            target_compile_definitions(test_save_debug_json_toggle PRIVATE ROGUE_HAVE_SDL=1)
        endif()
        add_test(NAME test_save_debug_json_toggle COMMAND test_save_debug_json_toggle)
    endif()

    # Varint counts (v4) test
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_save_v4_varint_counts.c AND NOT TARGET test_save_v4_varint_counts)
        add_executable(test_save_v4_varint_counts unit/test_save_v4_varint_counts.c)
        target_link_libraries(test_save_v4_varint_counts PRIVATE rogue_core)
        if(ROGUE_ENABLE_SDL)
            target_compile_definitions(test_save_v4_varint_counts PRIVATE ROGUE_HAVE_SDL=1)
        endif()
        add_test(NAME test_save_v4_varint_counts COMMAND test_save_v4_varint_counts)
    endif()

    # String intern table (v5) test
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_save_v5_strings.c AND NOT TARGET test_save_v5_strings)
        add_executable(test_save_v5_strings unit/test_save_v5_strings.c)
        target_link_libraries(test_save_v5_strings PRIVATE rogue_core)
        if(ROGUE_ENABLE_SDL)
            target_compile_definitions(test_save_v5_strings PRIVATE ROGUE_HAVE_SDL=1)
        endif()
        add_test(NAME test_save_v5_strings COMMAND test_save_v5_strings)
    endif()

    # Compression (v6) test
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_save_v6_compression.c AND NOT TARGET test_save_v6_compression)
        add_executable(test_save_v6_compression unit/test_save_v6_compression.c)
        target_link_libraries(test_save_v6_compression PRIVATE rogue_core)
        if(ROGUE_ENABLE_SDL)
            target_compile_definitions(test_save_v6_compression PRIVATE ROGUE_HAVE_SDL=1)
        endif()
        add_test(NAME test_save_v6_compression COMMAND test_save_v6_compression)
    endif()

    # Integrity (v7) test
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_save_v7_integrity.c AND NOT TARGET test_save_v7_integrity)
        add_executable(test_save_v7_integrity unit/test_save_v7_integrity.c)
        target_link_libraries(test_save_v7_integrity PRIVATE rogue_core)
        if(ROGUE_ENABLE_SDL)
            target_compile_definitions(test_save_v7_integrity PRIVATE ROGUE_HAVE_SDL=1)
        endif()
        add_test(NAME test_save_v7_integrity COMMAND test_save_v7_integrity)
    endif()

    # Replay hash (v8) test
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_save_v8_replay_hash.c AND NOT TARGET test_save_v8_replay_hash)
        add_executable(test_save_v8_replay_hash unit/test_save_v8_replay_hash.c)
        target_link_libraries(test_save_v8_replay_hash PRIVATE rogue_core)
        if(ROGUE_ENABLE_SDL)
            target_compile_definitions(test_save_v8_replay_hash PRIVATE ROGUE_HAVE_SDL=1)
        endif()
        add_test(NAME test_save_v8_replay_hash COMMAND test_save_v8_replay_hash)
    endif()

    # Tamper + recovery (v8) test
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_save_v8_tamper_recovery.c AND NOT TARGET test_save_v8_tamper_recovery)
        add_executable(test_save_v8_tamper_recovery unit/test_save_v8_tamper_recovery.c)
        target_link_libraries(test_save_v8_tamper_recovery PRIVATE rogue_core)
        if(ROGUE_ENABLE_SDL)
            target_compile_definitions(test_save_v8_tamper_recovery PRIVATE ROGUE_HAVE_SDL=1)
        endif()
        add_test(NAME test_save_v8_tamper_recovery COMMAND test_save_v8_tamper_recovery)
    endif()

    # Signature (v9) test
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_save_v9_signature.c AND NOT TARGET test_save_v9_signature)
        add_executable(test_save_v9_signature unit/test_save_v9_signature.c)
        target_link_libraries(test_save_v9_signature PRIVATE rogue_core)
        if(ROGUE_ENABLE_SDL)
            target_compile_definitions(test_save_v9_signature PRIVATE ROGUE_HAVE_SDL=1)
        endif()
        add_test(NAME test_save_v9_signature COMMAND test_save_v9_signature)
    endif()

    # Phase 15 inventory partial + backup test
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_save_phase15_inventory_partial_backup.c AND NOT TARGET test_save_phase15_inventory_partial_backup)
        add_executable(test_save_phase15_inventory_partial_backup unit/test_save_phase15_inventory_partial_backup.c)
        target_link_libraries(test_save_phase15_inventory_partial_backup PRIVATE rogue_core)
        if(ROGUE_HAVE_SDL)
            target_compile_definitions(test_save_phase15_inventory_partial_backup PRIVATE ROGUE_HAVE_SDL=1)
        endif()
        add_test(NAME test_save_phase15_inventory_partial_backup COMMAND test_save_phase15_inventory_partial_backup)
    endif()

    # Incremental save basic test (Phase 5)
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_save_incremental_basic.c AND NOT TARGET test_save_incremental_basic)
        add_executable(test_save_incremental_basic unit/test_save_incremental_basic.c)
        target_link_libraries(test_save_incremental_basic PRIVATE rogue_core)
        if(ROGUE_HAVE_SDL)
            target_compile_definitions(test_save_incremental_basic PRIVATE ROGUE_HAVE_SDL=1)
        endif()
        add_test(NAME test_save_incremental_basic COMMAND test_save_incremental_basic)
    endif()

    # Autosave scheduler test (Phase 6.1/6.3/6.4)
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_save_autosave_scheduler.c AND NOT TARGET test_save_autosave_scheduler)
        add_executable(test_save_autosave_scheduler unit/test_save_autosave_scheduler.c)
        target_link_libraries(test_save_autosave_scheduler PRIVATE rogue_core)
        if(ROGUE_HAVE_SDL)
            target_compile_definitions(test_save_autosave_scheduler PRIVATE ROGUE_HAVE_SDL=1)
        endif()
        add_test(NAME test_save_autosave_scheduler COMMAND test_save_autosave_scheduler)
    endif()

    # Autosave indicator/throttle test (Phase 6.5)
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_save_autosave_indicator.c AND NOT TARGET test_save_autosave_indicator)
        add_executable(test_save_autosave_indicator unit/test_save_autosave_indicator.c)
        target_link_libraries(test_save_autosave_indicator PRIVATE rogue_core)
        if(ROGUE_HAVE_SDL)
            target_compile_definitions(test_save_autosave_indicator PRIVATE ROGUE_HAVE_SDL=1)
        endif()
        add_test(NAME test_save_autosave_indicator COMMAND test_save_autosave_indicator)
    endif()

    # Phase 7.2/7.3 skill & buff extended state roundtrip test
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_save_phase7_skill_buff_roundtrip.c AND NOT TARGET test_save_phase7_skill_buff_roundtrip)
        add_executable(test_save_phase7_skill_buff_roundtrip unit/test_save_phase7_skill_buff_roundtrip.c)
        target_link_libraries(test_save_phase7_skill_buff_roundtrip PRIVATE rogue_core)
        if(ROGUE_HAVE_SDL)
            target_compile_definitions(test_save_phase7_skill_buff_roundtrip PRIVATE ROGUE_HAVE_SDL=1)
        endif()
        add_test(NAME test_save_phase7_skill_buff_roundtrip COMMAND test_save_phase7_skill_buff_roundtrip)
    endif()

    # Phase 7.1/7.7/7.8 player progression + analytics roundtrip test
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_save_phase7_player_analytics_roundtrip.c AND NOT TARGET test_save_phase7_player_analytics_roundtrip)
        add_executable(test_save_phase7_player_analytics_roundtrip unit/test_save_phase7_player_analytics_roundtrip.c)
        target_link_libraries(test_save_phase7_player_analytics_roundtrip PRIVATE rogue_core)
        if(ROGUE_HAVE_SDL)
            target_compile_definitions(test_save_phase7_player_analytics_roundtrip PRIVATE ROGUE_HAVE_SDL=1)
        endif()
        add_test(NAME test_save_phase7_player_analytics_roundtrip COMMAND test_save_phase7_player_analytics_roundtrip)
    endif()

    # Phase 7.5 vendor inventory roundtrip test
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_save_phase7_vendor_inventory_roundtrip.c AND NOT TARGET test_save_phase7_vendor_inventory_roundtrip)
        add_executable(test_save_phase7_vendor_inventory_roundtrip unit/test_save_phase7_vendor_inventory_roundtrip.c)
        target_link_libraries(test_save_phase7_vendor_inventory_roundtrip PRIVATE rogue_core)
        if(ROGUE_HAVE_SDL)
            target_compile_definitions(test_save_phase7_vendor_inventory_roundtrip PRIVATE ROGUE_HAVE_SDL=1)
        endif()
        add_test(NAME test_save_phase7_vendor_inventory_roundtrip COMMAND test_save_phase7_vendor_inventory_roundtrip)
    endif()

    # Phase 7.6 inventory durability roundtrip test
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_save_phase7_inventory_durability_roundtrip.c AND NOT TARGET test_save_phase7_inventory_durability_roundtrip)
        add_executable(test_save_phase7_inventory_durability_roundtrip unit/test_save_phase7_inventory_durability_roundtrip.c)
        target_link_libraries(test_save_phase7_inventory_durability_roundtrip PRIVATE rogue_core)
        if(ROGUE_HAVE_SDL)
            target_compile_definitions(test_save_phase7_inventory_durability_roundtrip PRIVATE ROGUE_HAVE_SDL=1)
        endif()
        add_test(NAME test_save_phase7_inventory_durability_roundtrip COMMAND test_save_phase7_inventory_durability_roundtrip)
    endif()

    # Basic save_manager smoke test (legacy simple test)
    if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_save_manager.c AND NOT TARGET test_save_manager)
        add_executable(test_save_manager unit/test_save_manager.c)
        target_link_libraries(test_save_manager PRIVATE rogue_core)
        if(ROGUE_ENABLE_SDL)
            target_compile_definitions(test_save_manager PRIVATE ROGUE_HAVE_SDL=1)
        endif()
        add_test(NAME test_save_manager COMMAND test_save_manager)
    endif()

endif() # ROGUE_ENABLE_TESTS
