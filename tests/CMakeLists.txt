file(GLOB UNIT_TESTS unit/test_*.c)

# Ensure newly added directional combat test is always present (some generators cache GLOB results between incremental reconfigurations).
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_combat_left_facing.c AND NOT TARGET test_combat_left_facing)
    add_executable(test_combat_left_facing unit/test_combat_left_facing.c)
    target_link_libraries(test_combat_left_facing PRIVATE rogue_core)
    target_compile_definitions(test_combat_left_facing PRIVATE TEST_COMBAT_PERMISSIVE=1)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_combat_left_facing PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_combat_left_facing COMMAND test_combat_left_facing)
endif()

foreach(ut ${UNIT_TESTS})
    get_filename_component(name ${ut} NAME_WE)
    if(TARGET ${name})
        # Skip if already added explicitly above
        continue()
    endif()
    add_executable(${name} ${ut})
    target_link_libraries(${name} PRIVATE rogue_core)
    target_compile_definitions(${name} PRIVATE TEST_COMBAT_PERMISSIVE=1)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(${name} PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME ${name} COMMAND ${name})
endforeach()

# Explicitly add vegetation collision test (ensure included even if glob cache stale)
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_vegetation_collision.c AND NOT TARGET test_vegetation_collision)
    add_executable(test_vegetation_collision unit/test_vegetation_collision.c)
    target_link_libraries(test_vegetation_collision PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_vegetation_collision PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_vegetation_collision COMMAND test_vegetation_collision)
endif()

# Explicitly add mob collision test
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_mob_collision.c AND NOT TARGET test_mob_collision)
    add_executable(test_mob_collision unit/test_mob_collision.c)
    target_link_libraries(test_mob_collision PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_mob_collision PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_mob_collision COMMAND test_mob_collision)
endif()

# Explicitly add navigation test
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_navigation.c AND NOT TARGET test_navigation)
    add_executable(test_navigation unit/test_navigation.c)
    target_link_libraries(test_navigation PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_navigation PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_navigation COMMAND test_navigation)
endif()

# Explicitly add A* pathfinding test
if(EXISTS ${CMAKE_CURRENT_SOURCE_DIR}/unit/test_astar.c AND NOT TARGET test_astar)
    add_executable(test_astar unit/test_astar.c)
    target_link_libraries(test_astar PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(test_astar PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    add_test(NAME test_astar COMMAND test_astar)
endif()

file(GLOB INTEGRATION_TESTS integration/test_*.c)
foreach(it ${INTEGRATION_TESTS})
    get_filename_component(name ${it} NAME_WE)
    add_executable(${name} ${it})
    target_link_libraries(${name} PRIVATE rogue_core)
    if(ROGUE_ENABLE_SDL)
        target_compile_definitions(${name} PRIVATE ROGUE_HAVE_SDL=1)
    endif()
    if(ROGUE_ENABLE_SDL)
        add_test(NAME ${name} COMMAND ${name})
        set_tests_properties(${name} PROPERTIES ENVIRONMENT "SDL_VIDEODRIVER=dummy")
    else()
        add_test(NAME ${name} COMMAND ${name})
    endif()
endforeach()
